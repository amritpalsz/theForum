{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <h2>Create a New Post</h2>
            <form action="/posts" method="POST">
                <input type="text" name="title" placeholder="Title" required>
                <textarea name="content" placeholder="What's on your mind?" required></textarea>
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>
            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <input type="text" id="emoji-search" oninput="searchEmojis()" placeholder="Search emojis...">
                <div id="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <section class="posts-list">
        <h2>Recent Posts</h2>
        {{#if posts.length}}
            <ul>
                {{#each posts}}
                    {{> post this user=(getUserById ../users @root.userId)}}
                {{/each}}
            </ul>
        {{else}}
            <p>No posts yet. Be the first to create one!</p>
        {{/if}}
    </section>
</section>

{{! JavaScript for Emoji Integration }}
<script>
    let allEmojis = [];

    function toggleEmojiPanel() {
        const container = document.getElementById('emoji-container');
        container.style.display = container.style.display === 'none' ? 'block' : 'none';
        if (container.style.display === 'block' && allEmojis.length === 0) {
            fetchEmojis()
                .then(emojis => {
                    allEmojis = emojis;
                    displayEmojis(emojis);
                })
                .catch(error => {
                    console.error('Error fetching emojis:', error);
                });
        }
    }

    function displayEmojis(emojis, limit = 200) {
        const container = document.getElementById('emoji-grid');
        container.innerHTML = '';

        if (Array.isArray(emojis) && emojis.length > 0) {
            emojis.slice(0, limit).forEach(emoji => {
                const emojiElement = document.createElement('span');
                emojiElement.textContent = emoji.character;
                emojiElement.title = emoji.slug;
                emojiElement.style.cursor = 'pointer';
                emojiElement.onclick = () => insertEmoji(emoji.character);
                container.appendChild(emojiElement);
            });
        } else {
            container.textContent = 'No emojis found. Try a different search!';
        }
    }

    function searchEmojis() {
        const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
        const filteredEmojis = allEmojis.filter(emoji => emoji.slug.includes(searchTerm));
        displayEmojis(filteredEmojis);
    }

    function insertEmoji(emoji) {
        const textarea = document.querySelector('textarea[name="content"]');
        textarea.value += emoji;
        textarea.focus();
    }

    function fetchEmojis() {
    return fetch('https://emoji-api.com/emojis?access_key=YOUR_ACCESS_KEY')
        .then(response => response.json())
        .catch(error => {
            console.error('Error fetching emojis:', error);
            return [];
        });
}

</script>